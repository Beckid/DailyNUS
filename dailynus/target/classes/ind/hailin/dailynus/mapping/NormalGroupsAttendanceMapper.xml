<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ind.hailin.dailynus.dao.NormalGroupsAttendanceDao">
  <resultMap id="BaseResultMap" type="ind.hailin.dailynus.entity.NormalGroupsAttendance">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, person_id, group_id, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from normal_group_attendance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from normal_group_attendance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="ind.hailin.dailynus.entity.NormalGroupsAttendance">
    insert into normal_group_attendance (id, person_id, group_id, 
      updated_at)
    values (#{id,jdbcType=INTEGER}, #{personId,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, 
      #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="ind.hailin.dailynus.entity.NormalGroupsAttendance">
    insert into normal_group_attendance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ind.hailin.dailynus.entity.NormalGroupsAttendance">
    update normal_group_attendance
    <set>
      <if test="personId != null">
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ind.hailin.dailynus.entity.NormalGroupsAttendance">
    update normal_group_attendance
    set person_id = #{personId,jdbcType=INTEGER},
      group_id = #{groupId,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>